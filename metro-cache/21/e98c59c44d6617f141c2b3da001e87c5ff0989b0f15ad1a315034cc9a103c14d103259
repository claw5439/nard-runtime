{"dependencies":[{"name":"../errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":47,"index":62}}],"key":"hqwpWRawU/ruYp+nBkn/8IqEHoU=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,\"__esModule\",{value:!0}),e.processTransformOrigin=void 0;var n=r(d[0]);const t={code:\"function validateTransformOrigin_reactNativeReanimated_processTransformOriginJs1(transformOrigin){if(transformOrigin.length!==3){throw new ReanimatedError('Transform origin must have exactly 3 values.');}const[x,y,z]=transformOrigin;if(!(typeof x==='number'||typeof x==='string'&&x.endsWith('%'))){throw new ReanimatedError(\\\"Transform origin x-position must be a number or a percentage string. Passed value: \\\"+x+\\\".\\\");}if(!(typeof y==='number'||typeof y==='string'&&y.endsWith('%'))){throw new ReanimatedError(\\\"Transform origin y-position must be a number or a percentage string. Passed value: \\\"+y+\\\".\\\");}if(typeof z!=='number'){throw new ReanimatedError(\\\"Transform origin z-position must be a number. Passed value: \\\"+z+\\\".\\\");}}\"},o=(function(){const o=function(t){if(3!==t.length)throw new n.ReanimatedError('Transform origin must have exactly 3 values.');const[o,s,f]=t;if(!('number'==typeof o||'string'==typeof o&&o.endsWith('%')))throw new n.ReanimatedError(`Transform origin x-position must be a number or a percentage string. Passed value: ${o}.`);if(!('number'==typeof s||'string'==typeof s&&s.endsWith('%')))throw new n.ReanimatedError(`Transform origin y-position must be a number or a percentage string. Passed value: ${s}.`);if('number'!=typeof f)throw new n.ReanimatedError(`Transform origin z-position must be a number. Passed value: ${f}.`)};return o.__closure={},o.__workletHash=7298181072720,o.__initData=t,o})(),s={code:\"function processTransformOrigin_reactNativeReanimated_processTransformOriginJs2(transformOriginIn){const{INDEX_X,INDEX_Z,INDEX_Y,__DEV__,validateTransformOrigin}=this.__closure;let transformOrigin=Array.isArray(transformOriginIn)?transformOriginIn:['50%','50%',0];if(typeof transformOriginIn==='string'){const transformOriginString=transformOriginIn;const regex=/(top|bottom|left|right|center|\\\\d+(?:%|px)|0)/gi;const transformOriginArray=['50%','50%',0];let index=INDEX_X;let matches;while(matches=regex.exec(transformOriginString)){let nextIndex=index+1;const value=matches[0];const valueLower=value.toLowerCase();switch(valueLower){case'left':case'right':{if(index!==INDEX_X){throw new ReanimatedError(\\\"Transform-origin \\\"+value+\\\" can only be used for x-position\\\");}transformOriginArray[INDEX_X]=valueLower==='left'?0:'100%';break;}case'top':case'bottom':{if(index===INDEX_Z){throw new ReanimatedError(\\\"Transform-origin \\\"+value+\\\" can only be used for y-position\\\");}transformOriginArray[INDEX_Y]=valueLower==='top'?0:'100%';if(index===INDEX_X){const horizontal=regex.exec(transformOriginString);if(horizontal==null){break;}switch(horizontal===null||horizontal===void 0?void 0:horizontal[0].toLowerCase()){case'left':transformOriginArray[INDEX_X]=0;break;case'right':transformOriginArray[INDEX_X]='100%';break;case'center':transformOriginArray[INDEX_X]='50%';break;default:throw new ReanimatedError(\\\"Could not parse transform-origin: \\\"+transformOriginString);}nextIndex=INDEX_Z;}break;}case'center':{if(index===INDEX_Z){throw new ReanimatedError(\\\"Transform-origin value \\\"+value+\\\" cannot be used for z-position\\\");}transformOriginArray[index]='50%';break;}default:{if(value.endsWith('%')){transformOriginArray[index]=value;}else{const numericValue=parseFloat(value);if(isNaN(numericValue)){throw new ReanimatedError(\\\"Invalid numeric value in transform-origin: \\\"+value);}transformOriginArray[index]=numericValue;}break;}}index=nextIndex;}transformOrigin=transformOriginArray;}if(typeof transformOriginIn!=='string'&&!Array.isArray(transformOriginIn)){throw new ReanimatedError(\\\"Invalid transformOrigin type: \\\"+typeof transformOriginIn);}if(__DEV__){validateTransformOrigin(transformOrigin);}return transformOrigin;}\"};e.processTransformOrigin=(function(){const t=function(t){let o=Array.isArray(t)?t:['50%','50%',0];if('string'==typeof t){const s=t,f=/(top|bottom|left|right|center|\\d+(?:%|px)|0)/gi,c=['50%','50%',0];let l,u=0;for(;l=f.exec(s);){let t=u+1;const o=l[0],w=o.toLowerCase();switch(w){case'left':case'right':if(0!==u)throw new n.ReanimatedError(`Transform-origin ${o} can only be used for x-position`);c[0]='left'===w?0:'100%';break;case'top':case'bottom':if(2===u)throw new n.ReanimatedError(`Transform-origin ${o} can only be used for y-position`);if(c[1]='top'===w?0:'100%',0===u){const o=f.exec(s);if(null==o)break;switch(o?.[0].toLowerCase()){case'left':c[0]=0;break;case'right':c[0]='100%';break;case'center':c[0]='50%';break;default:throw new n.ReanimatedError(`Could not parse transform-origin: ${s}`)}t=2}break;case'center':if(2===u)throw new n.ReanimatedError(`Transform-origin value ${o} cannot be used for z-position`);c[u]='50%';break;default:if(o.endsWith('%'))c[u]=o;else{const t=parseFloat(o);if(isNaN(t))throw new n.ReanimatedError(`Invalid numeric value in transform-origin: ${o}`);c[u]=t}}u=t}o=c}if('string'!=typeof t&&!Array.isArray(t))throw new n.ReanimatedError(\"Invalid transformOrigin type: \"+typeof t);return o};return t.__closure={INDEX_X:0,INDEX_Z:2,INDEX_Y:1,__DEV__:!1,validateTransformOrigin:o},t.__workletHash=4007711361503,t.__initData=s,t})()});","lineCount":1,"map":[[1,28,1,0],[1,41,1,13,"Object"],[1,48,1,13,"defineProperty"],[1,63,1,13,"e"],[1,65,1,13],[1,79,1,13,"value"],[1,86,1,13],[1,90,1,13,"e"],[1,92,1,13,"processTransformOrigin"],[1,120,1,13,"undefined"],[1,122,3,0],[1,126,3,0,"_errors"],[1,128,3,0,"r"],[1,130,3,0,"d"],[1,132,3,0],[1,136,4,0],[1,142,8,0,"_worklet_7298181072720_init_data"],[1,144,8,0],[1,145,8,0,"code"],[1,150,8,0],[1,891,8,0,"validateTransformOrigin"],[1,894,9,0],[1,911,9,0,"validateTransformOrigin"],[1,913,9,0],[1,922,9,33,"transformOrigin"],[1,925,12,2],[1,928,12,33],[1,932,12,6,"transformOrigin"],[1,934,12,22,"length"],[1,941,13,4],[1,947,13,10],[1,951,13,14,"ReanimatedError"],[1,969,13,30],[1,1017,15,2],[1,1023,15,9,"x"],[1,1025,15,12,"y"],[1,1027,15,15,"z"],[1,1030,15,20,"transformOrigin"],[1,1032,16,2],[1,1037,16,21],[1,1054,16,15,"x"],[1,1057,16,46],[1,1074,16,40,"x"],[1,1077,16,58,"x"],[1,1079,16,60,"endsWith"],[1,1088,16,69],[1,1094,17,4],[1,1100,17,10],[1,1104,17,14,"ReanimatedError"],[1,1122,17,30],[1,1208,17,116,"x"],[1,1214,19,2],[1,1219,19,21],[1,1236,19,15,"y"],[1,1239,19,46],[1,1256,19,40,"y"],[1,1259,19,58,"y"],[1,1261,19,60,"endsWith"],[1,1270,19,69],[1,1276,20,4],[1,1282,20,10],[1,1286,20,14,"ReanimatedError"],[1,1304,20,30],[1,1390,20,116,"y"],[1,1396,22,2],[1,1399,22,19],[1,1416,22,13,"z"],[1,1418,23,4],[1,1424,23,10],[1,1428,23,14,"ReanimatedError"],[1,1446,23,30],[1,1509,23,93,"z"],[1,1514,25,0],[1,1516,25,1],[1,1523,25,1,"validateTransformOrigin"],[1,1525,25,1,"__closure"],[1,1535,25,1],[1,1538,25,1,"validateTransformOrigin"],[1,1540,25,1,"__workletHash"],[1,1554,25,1],[1,1568,25,1,"validateTransformOrigin"],[1,1570,25,1,"__initData"],[1,1581,25,1,"_worklet_7298181072720_init_data"],[1,1583,25,1,"validateTransformOrigin"],[1,1584,25,1],[1,1586,9,0],[1,1589,9,0,"_worklet_4007711361503_init_data"],[1,1591,9,0],[1,1592,9,0,"code"],[1,1597,9,0],[1,3831,9,0,"e"],[1,3833,9,0,"processTransformOrigin"],[1,3857,26,7],[1,3874,26,7,"processTransformOrigin"],[1,3876,26,7],[1,3885,26,39,"transformOriginIn"],[1,3888,29,2],[1,3892,29,6,"transformOrigin"],[1,3894,29,24,"Array"],[1,3900,29,30,"isArray"],[1,3908,29,38,"transformOriginIn"],[1,3911,29,59,"transformOriginIn"],[1,3913,29,79],[1,3914,29,80],[1,3920,29,87],[1,3926,29,94],[1,3929,30,2],[1,3932,30,35],[1,3949,30,13,"transformOriginIn"],[1,3951,30,45],[1,3952,31,4],[1,3958,31,10,"transformOriginString"],[1,3960,31,34,"transformOriginIn"],[1,3962,32,10,"regex"],[1,3964,32,18],[1,4013,33,10,"transformOriginArray"],[1,4015,33,33],[1,4016,33,34],[1,4022,33,41],[1,4028,33,48],[1,4031,34,4],[1,4035,35,8,"matches"],[1,4037,34,8,"index"],[1,4039,4,16],[1,4041,36,4],[1,4046,36,11,"matches"],[1,4048,36,21,"regex"],[1,4050,36,27,"exec"],[1,4055,36,32,"transformOriginString"],[1,4059,36,56],[1,4060,37,6],[1,4064,37,10,"nextIndex"],[1,4066,37,22,"index"],[1,4068,37,30],[1,4070,38,6],[1,4076,38,12,"value"],[1,4078,38,20,"matches"],[1,4080,38,28],[1,4083,39,12,"valueLower"],[1,4085,39,25,"value"],[1,4087,39,31,"toLowerCase"],[1,4101,40,6],[1,4108,40,14,"valueLower"],[1,4111,41,8],[1,4115,41,13],[1,4122,42,8],[1,4126,42,13],[1,4134,44,12],[1,4137,4,16],[1,4141,44,16,"index"],[1,4143,45,14],[1,4149,45,20],[1,4153,45,24,"ReanimatedError"],[1,4171,45,40],[1,4191,45,60,"value"],[1,4228,47,12,"transformOriginArray"],[1,4230,4,16],[1,4233,47,59],[1,4242,47,44,"valueLower"],[1,4244,47,68],[1,4246,47,72],[1,4253,48,12],[1,4259,50,8],[1,4263,50,13],[1,4269,51,8],[1,4273,51,13],[1,4282,53,12],[1,4285,6,16],[1,4289,53,16,"index"],[1,4291,54,14],[1,4297,54,20],[1,4301,54,24,"ReanimatedError"],[1,4319,54,40],[1,4339,54,60,"value"],[1,4376,59,12],[1,4379,56,12,"transformOriginArray"],[1,4381,5,16],[1,4384,56,59],[1,4392,56,44,"valueLower"],[1,4394,56,67],[1,4396,56,71],[1,4403,4,16],[1,4407,59,16,"index"],[1,4409,59,35],[1,4410,60,14],[1,4416,60,20,"horizontal"],[1,4418,60,33,"regex"],[1,4420,60,39,"exec"],[1,4425,60,44,"transformOriginString"],[1,4428,61,14],[1,4431,61,32],[1,4437,61,18,"horizontal"],[1,4439,62,16],[1,4445,64,14],[1,4452,64,22,"horizontal"],[1,4456,64,35],[1,4459,64,38,"toLowerCase"],[1,4474,65,16],[1,4478,65,21],[1,4485,66,18,"transformOriginArray"],[1,4487,4,16],[1,4490,66,50],[1,4492,67,18],[1,4498,68,16],[1,4502,68,21],[1,4510,69,18,"transformOriginArray"],[1,4512,4,16],[1,4515,69,50],[1,4522,70,18],[1,4528,71,16],[1,4532,71,21],[1,4541,72,18,"transformOriginArray"],[1,4543,4,16],[1,4546,72,50],[1,4552,73,18],[1,4558,74,16],[1,4566,75,18],[1,4572,75,24],[1,4576,75,28,"ReanimatedError"],[1,4594,75,44],[1,4631,75,81,"transformOriginString"],[1,4636,77,14,"nextIndex"],[1,4638,6,16],[1,4639,78,12],[1,4640,79,12],[1,4646,81,8],[1,4650,81,13],[1,4659,83,12],[1,4662,6,16],[1,4666,83,16,"index"],[1,4668,84,14],[1,4674,84,20],[1,4678,84,24,"ReanimatedError"],[1,4696,84,40],[1,4722,84,66,"value"],[1,4757,86,12,"transformOriginArray"],[1,4759,86,33,"index"],[1,4762,86,42],[1,4768,87,12],[1,4774,89,8],[1,4782,91,12],[1,4785,91,16,"value"],[1,4787,91,22,"endsWith"],[1,4796,91,31],[1,4801,92,14,"transformOriginArray"],[1,4803,92,35,"index"],[1,4806,92,44,"value"],[1,4812,93,19],[1,4813,94,14],[1,4819,94,20,"numericValue"],[1,4821,94,35,"parseFloat"],[1,4832,94,46,"value"],[1,4835,95,14],[1,4838,95,18,"isNaN"],[1,4844,95,24,"numericValue"],[1,4847,96,16],[1,4853,96,22],[1,4857,96,26,"ReanimatedError"],[1,4875,96,42],[1,4921,96,88,"value"],[1,4926,98,14,"transformOriginArray"],[1,4928,98,35,"index"],[1,4931,98,44,"numericValue"],[1,4932,99,12],[1,4934,103,6,"index"],[1,4936,103,14,"nextIndex"],[1,4937,104,4],[1,4938,105,4,"transformOrigin"],[1,4940,105,22,"transformOriginArray"],[1,4941,106,2],[1,4942,107,2],[1,4945,107,35],[1,4962,107,13,"transformOriginIn"],[1,4966,107,48,"Array"],[1,4972,107,54,"isArray"],[1,4980,107,62,"transformOriginIn"],[1,4983,108,4],[1,4989,108,10],[1,4993,108,14,"ReanimatedError"],[1,5011,108,30],[1,5051,108,70,"transformOriginIn"],[1,5054,113,2],[1,5061,113,9,"transformOrigin"],[1,5062,114,0],[1,5064,114,1],[1,5071,114,1,"processTransformOrigin"],[1,5073,114,1,"__closure"],[1,5083,114,1],[1,5084,114,1,"INDEX_X"],[1,5092,4,16],[1,5094,114,1,"INDEX_Z"],[1,5102,6,16],[1,5104,114,1,"INDEX_Y"],[1,5112,5,16],[1,5114,114,1,"__DEV__"],[1,5123,114,1],[1,5125,114,1,"validateTransformOrigin"],[1,5152,114,1,"processTransformOrigin"],[1,5154,114,1,"__workletHash"],[1,5168,114,1],[1,5182,114,1,"processTransformOrigin"],[1,5184,114,1,"__initData"],[1,5195,114,1,"_worklet_4007711361503_init_data"],[1,5197,114,1,"processTransformOrigin"],[1,5198,114,1],[1,5200,26,7],[1,5205]],"functionMap":{"names":["<global>","validateTransformOrigin","processTransformOrigin"],"mappings":"AAA;ACQ;CDgB;OEC;CFwF"}},"type":"js/module"}]}