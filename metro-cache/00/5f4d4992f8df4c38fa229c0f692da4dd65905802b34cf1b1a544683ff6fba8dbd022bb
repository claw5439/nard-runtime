{"dependencies":[{"name":"./errors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":46,"index":61}}],"key":"sBFAilsnlkNTfGhyvhhjLjsyBXM=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){'use strict';Object.defineProperty(e,\"__esModule\",{value:!0}),e.Bezier=void 0;var t=r(d[0]);const n=.001,i=.1,l={code:\"function A_reactNativeReanimated_BezierJs1(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\"},o=(function(){const t=function(t,n){return 1-3*n+3*t};return t.__closure={},t.__workletHash=8828646082676,t.__initData=l,t})(),c={code:\"function B_reactNativeReanimated_BezierJs2(aA1,aA2){return 3.0*aA2-6.0*aA1;}\"},u=(function(){const t=function(t,n){return 3*n-6*t};return t.__closure={},t.__workletHash=4203953384949,t.__initData=c,t})(),s={code:\"function C_reactNativeReanimated_BezierJs3(aA1){return 3.0*aA1;}\"},S=(function(){const t=function(t){return 3*t};return t.__closure={},t.__workletHash=8388140024310,t.__initData=s,t})(),_={code:\"function calcBezier_reactNativeReanimated_BezierJs4(aT,aA1,aA2){const{A,B,C}=this.__closure;return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}\"},p=(function(){const t=function(t,n,i){return((o(n,i)*t+u(n,i))*t+S(n))*t};return t.__closure={A:o,B:u,C:S},t.__workletHash=0xe50e323023e,t.__initData=_,t})(),X={code:\"function getSlope_reactNativeReanimated_BezierJs5(aT,aA1,aA2){const{A,B,C}=this.__closure;return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}\"},f=(function(){const t=function(t,n,i){return 3*o(n,i)*t*t+2*u(n,i)*t+S(n)};return t.__closure={A:o,B:u,C:S},t.__workletHash=4162364291299,t.__initData=X,t})(),T={code:\"function binarySubdivide_reactNativeReanimated_BezierJs6(aX,aA,aB,mX1,mX2){const{calcBezier,SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS}=this.__closure;let currentX;let currentT;let i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}\"},z=(function(){const t=function(t,n,i,l,o){let c,u,s=0;do{u=n+(i-n)/2,c=p(u,l,o)-t,c>0?i=u:n=u}while(Math.abs(c)>1e-7&&++s<10);return u};return t.__closure={calcBezier:p,SUBDIVISION_PRECISION:1e-7,SUBDIVISION_MAX_ITERATIONS:10},t.__workletHash=9166841024279,t.__initData=T,t})(),N={code:\"function newtonRaphsonIterate_reactNativeReanimated_BezierJs7(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=this.__closure;for(let i=0;i<NEWTON_ITERATIONS;++i){const currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}const currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}\"},B=(function(){const t=function(t,n,i,l){for(let o=0;o<4;++o){const o=f(n,i,l);if(0===o)return n;n-=(p(n,i,l)-t)/o}return n};return t.__closure={NEWTON_ITERATIONS:4,getSlope:f,calcBezier:p},t.__workletHash=0xc60136f3699,t.__initData=N,t})(),I={code:\"function Bezier_reactNativeReanimated_BezierJs8(mX1,mY1,mX2,mY2){const{kSplineTableSize,calcBezier,kSampleStepSize,getSlope,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;function LinearEasing(x){'worklet';return x;}if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new ReanimatedError('Bezier x values must be in [0, 1] range.');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}const sampleValues=new Array(kSplineTableSize);for(let i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}function getTForX(aX){'worklet';let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}return function Bezier_reactNativeReanimated_BezierJs8(x){'worklet';if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};}\"},A={code:\"function LinearEasing_reactNativeReanimated_BezierJs9(x){return x;}\"},v={code:\"function getTForX_reactNativeReanimated_BezierJs10(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=this.__closure;let intervalStart=0.0;let currentSample=1;const lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;const dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);const guessForT=intervalStart+dist*kSampleStepSize;const initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}\"},k={code:\"function BezierEasing_reactNativeReanimated_BezierJs11(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=this.__closure;if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}\"};e.Bezier=(function(){const l=function(l,o,c,u){const s=(function(){const t=function(t){return t};return t.__closure={},t.__workletHash=0xfaf2062d7d2,t.__initData=A,t})();if(!(l>=0&&l<=1&&c>=0&&c<=1))throw new t.ReanimatedError('Bezier x values must be in [0, 1] range.');if(l===o&&c===u)return s;const S=new Array(11);for(let t=0;t<11;++t)S[t]=p(t*i,l,c);const _=(function(){const t=function(t){let o=0,u=1;for(;10!==u&&S[u]<=t;++u)o+=i;--u;const s=o+(t-S[u])/(S[u+1]-S[u])*i,_=f(s,l,c);return _>=n?B(t,s,l,c):0===_?s:z(t,o,o+i,l,c)};return t.__closure={kSplineTableSize:11,sampleValues:S,kSampleStepSize:i,getSlope:f,mX1:l,mX2:c,NEWTON_MIN_SLOPE:n,newtonRaphsonIterate:B,binarySubdivide:z},t.__workletHash=0xdfdc8d4cb73,t.__initData=v,t})();return(function(){const t=function(t){return l===o&&c===u?t:0===t?0:1===t?1:p(_(t),o,u)};return t.__closure={mX1:l,mY1:o,mX2:c,mY2:u,calcBezier:p,getTForX:_},t.__workletHash=7919274967463,t.__initData=k,t})()};return l.__closure={kSplineTableSize:11,calcBezier:p,kSampleStepSize:i,getSlope:f,NEWTON_MIN_SLOPE:n,newtonRaphsonIterate:B,binarySubdivide:z},l.__workletHash=6918608934740,l.__initData=I,l})()});","lineCount":1,"map":[[1,29,1,0],[1,42,1,13,"Object"],[1,49,1,13,"defineProperty"],[1,64,1,13,"e"],[1,66,1,13],[1,80,1,13,"value"],[1,87,1,13],[1,91,1,13,"e"],[1,93,1,13,"Bezier"],[1,105,1,13,"undefined"],[1,107,3,0],[1,111,3,0,"_errors"],[1,113,3,0,"r"],[1,115,3,0,"d"],[1,117,3,0],[1,121,12,0],[1,127,13,6,"NEWTON_MIN_SLOPE"],[1,129,13,25],[1,134,17,6,"kSampleStepSize"],[1,136,17,21],[1,139,17,55,"_worklet_8828646082676_init_data"],[1,141,17,55],[1,142,17,55,"code"],[1,147,17,55],[1,231,17,55,"A"],[1,234,18,0],[1,251,18,0,"A"],[1,253,18,0],[1,262,18,11,"aA1"],[1,264,18,16,"aA2"],[1,267,21,2],[1,274,21,9],[1,276,21,15],[1,278,21,21,"aA2"],[1,280,21,27],[1,282,21,33,"aA1"],[1,283,22,0],[1,285,22,1],[1,292,22,1,"A"],[1,294,22,1,"__closure"],[1,304,22,1],[1,307,22,1,"A"],[1,309,22,1,"__workletHash"],[1,323,22,1],[1,337,22,1,"A"],[1,339,22,1,"__initData"],[1,350,22,1,"_worklet_8828646082676_init_data"],[1,352,22,1,"A"],[1,353,22,1],[1,355,18,0],[1,358,18,0,"_worklet_4203953384949_init_data"],[1,360,18,0],[1,361,18,0,"code"],[1,366,18,0],[1,446,18,0,"B"],[1,449,23,0],[1,466,23,0,"B"],[1,468,23,0],[1,477,23,11,"aA1"],[1,479,23,16,"aA2"],[1,482,26,2],[1,489,26,9],[1,491,26,15,"aA2"],[1,493,26,21],[1,495,26,27,"aA1"],[1,496,27,0],[1,498,27,1],[1,505,27,1,"B"],[1,507,27,1,"__closure"],[1,517,27,1],[1,520,27,1,"B"],[1,522,27,1,"__workletHash"],[1,536,27,1],[1,550,27,1,"B"],[1,552,27,1,"__initData"],[1,563,27,1,"_worklet_4203953384949_init_data"],[1,565,27,1,"B"],[1,566,27,1],[1,568,23,0],[1,571,23,0,"_worklet_8388140024310_init_data"],[1,573,23,0],[1,574,23,0,"code"],[1,579,23,0],[1,647,23,0,"C"],[1,650,28,0],[1,667,28,0,"C"],[1,669,28,0],[1,678,28,11,"aA1"],[1,681,31,2],[1,688,31,9],[1,690,31,15,"aA1"],[1,691,32,0],[1,693,32,1],[1,700,32,1,"C"],[1,702,32,1,"__closure"],[1,712,32,1],[1,715,32,1,"C"],[1,717,32,1,"__workletHash"],[1,731,32,1],[1,745,32,1,"C"],[1,747,32,1,"__initData"],[1,758,32,1,"_worklet_8388140024310_init_data"],[1,760,32,1,"C"],[1,761,32,1],[1,763,28,0],[1,766,34,0,"_worklet_15740570894910_init_data"],[1,768,34,0],[1,769,34,0,"code"],[1,774,34,0],[1,919,34,0,"calcBezier"],[1,922,35,0],[1,939,35,0,"calcBezier"],[1,941,35,0],[1,950,35,20,"aT"],[1,952,35,24,"aA1"],[1,954,35,29,"aA2"],[1,957,38,2],[1,965,38,11,"A"],[1,967,38,13,"aA1"],[1,969,38,18,"aA2"],[1,972,38,25,"aT"],[1,974,38,30,"B"],[1,976,38,32,"aA1"],[1,978,38,37,"aA2"],[1,982,38,45,"aT"],[1,984,38,50,"C"],[1,986,38,52,"aA1"],[1,990,38,60,"aT"],[1,991,39,0],[1,993,39,1],[1,1000,39,1,"calcBezier"],[1,1002,39,1,"__closure"],[1,1012,39,1],[1,1013,39,1,"A"],[1,1017,39,1,"B"],[1,1021,39,1,"C"],[1,1026,39,1,"calcBezier"],[1,1028,39,1,"__workletHash"],[1,1042,39,1],[1,1056,39,1,"calcBezier"],[1,1058,39,1,"__initData"],[1,1069,39,1,"_worklet_15740570894910_init_data"],[1,1071,39,1,"calcBezier"],[1,1072,39,1],[1,1074,35,0],[1,1077,41,0,"_worklet_4162364291299_init_data"],[1,1079,41,0],[1,1080,41,0,"code"],[1,1085,41,0],[1,1233,41,0,"getSlope"],[1,1236,42,0],[1,1253,42,0,"getSlope"],[1,1255,42,0],[1,1264,42,18,"aT"],[1,1266,42,22,"aA1"],[1,1268,42,27,"aA2"],[1,1271,45,2],[1,1278,45,9],[1,1280,45,15,"A"],[1,1282,45,17,"aA1"],[1,1284,45,22,"aA2"],[1,1287,45,29,"aT"],[1,1289,45,34,"aT"],[1,1291,45,39],[1,1293,45,45,"B"],[1,1295,45,47,"aA1"],[1,1297,45,52,"aA2"],[1,1300,45,59,"aT"],[1,1302,45,64,"C"],[1,1304,45,66,"aA1"],[1,1306,46,0],[1,1308,46,1],[1,1315,46,1,"getSlope"],[1,1317,46,1,"__closure"],[1,1327,46,1],[1,1328,46,1,"A"],[1,1332,46,1,"B"],[1,1336,46,1,"C"],[1,1341,46,1,"getSlope"],[1,1343,46,1,"__workletHash"],[1,1357,46,1],[1,1371,46,1,"getSlope"],[1,1373,46,1,"__initData"],[1,1384,46,1,"_worklet_4162364291299_init_data"],[1,1386,46,1,"getSlope"],[1,1387,46,1],[1,1389,42,0],[1,1392,42,0,"_worklet_9166841024279_init_data"],[1,1394,42,0],[1,1395,42,0,"code"],[1,1400,42,0],[1,1809,42,0,"binarySubdivide"],[1,1812,47,0],[1,1829,47,0,"binarySubdivide"],[1,1831,47,0],[1,1840,47,25,"aX"],[1,1842,47,29,"aA"],[1,1844,47,33,"aB"],[1,1846,47,37,"mX1"],[1,1848,47,42,"mX2"],[1,1851,50,2],[1,1855,50,6,"currentX"],[1,1857,51,6,"currentT"],[1,1859,52,6,"i"],[1,1861,52,10],[1,1863,53,2],[1,1866,54,4,"currentT"],[1,1868,54,15,"aA"],[1,1871,54,21,"aB"],[1,1873,54,26,"aA"],[1,1876,54,32],[1,1878,55,4,"currentX"],[1,1880,55,15,"calcBezier"],[1,1882,55,26,"currentT"],[1,1884,55,36,"mX1"],[1,1886,55,41,"mX2"],[1,1889,55,48,"aX"],[1,1891,56,8,"currentX"],[1,1893,56,19],[1,1895,57,6,"aB"],[1,1897,57,11,"currentT"],[1,1899,59,6,"aA"],[1,1901,59,11,"currentT"],[1,1909,61,11,"Math"],[1,1914,61,16,"abs"],[1,1918,61,20,"currentX"],[1,1921,14,30],[1,1929,61,59,"i"],[1,1931,15,35],[1,1935,62,2],[1,1942,62,9,"currentT"],[1,1943,63,0],[1,1945,63,1],[1,1952,63,1,"binarySubdivide"],[1,1954,63,1,"__closure"],[1,1964,63,1],[1,1965,63,1,"calcBezier"],[1,1978,63,1,"SUBDIVISION_PRECISION"],[1,2000,14,30],[1,2005,63,1,"SUBDIVISION_MAX_ITERATIONS"],[1,2032,15,35],[1,2036,63,1,"binarySubdivide"],[1,2038,63,1,"__workletHash"],[1,2052,63,1],[1,2066,63,1,"binarySubdivide"],[1,2068,63,1,"__initData"],[1,2079,63,1,"_worklet_9166841024279_init_data"],[1,2081,63,1,"binarySubdivide"],[1,2082,63,1],[1,2084,47,0],[1,2087,47,0,"_worklet_13606782449305_init_data"],[1,2089,47,0],[1,2090,47,0,"code"],[1,2095,47,0],[1,2456,47,0,"newtonRaphsonIterate"],[1,2459,64,0],[1,2476,64,0,"newtonRaphsonIterate"],[1,2478,64,0],[1,2487,64,30,"aX"],[1,2489,64,34,"aGuessT"],[1,2491,64,43,"mX1"],[1,2493,64,48,"mX2"],[1,2496,67,2],[1,2500,67,7],[1,2504,67,11,"i"],[1,2506,67,15],[1,2508,67,18,"i"],[1,2510,12,26],[1,2514,67,43,"i"],[1,2516,67,46],[1,2517,68,4],[1,2523,68,10,"currentSlope"],[1,2525,68,25,"getSlope"],[1,2527,68,34,"aGuessT"],[1,2529,68,43,"mX1"],[1,2531,68,48,"mX2"],[1,2534,69,4],[1,2537,69,25],[1,2541,69,8,"currentSlope"],[1,2543,70,6],[1,2550,70,13,"aGuessT"],[1,2552,73,4,"aGuessT"],[1,2556,72,21,"calcBezier"],[1,2558,72,32,"aGuessT"],[1,2560,72,41,"mX1"],[1,2562,72,46,"mX2"],[1,2565,72,53,"aX"],[1,2568,73,26,"currentSlope"],[1,2569,74,2],[1,2570,75,2],[1,2577,75,9,"aGuessT"],[1,2578,76,0],[1,2580,76,1],[1,2587,76,1,"newtonRaphsonIterate"],[1,2589,76,1,"__closure"],[1,2599,76,1],[1,2600,76,1,"NEWTON_ITERATIONS"],[1,2618,12,26],[1,2620,76,1,"getSlope"],[1,2631,76,1,"calcBezier"],[1,2645,76,1,"newtonRaphsonIterate"],[1,2647,76,1,"__workletHash"],[1,2661,76,1],[1,2675,76,1,"newtonRaphsonIterate"],[1,2677,76,1,"__initData"],[1,2688,76,1,"_worklet_13606782449305_init_data"],[1,2690,76,1,"newtonRaphsonIterate"],[1,2691,76,1],[1,2693,64,0],[1,2696,64,0,"_worklet_6918608934740_init_data"],[1,2698,64,0],[1,2699,64,0,"code"],[1,2704,64,0],[1,4085,64,0,"_worklet_17244837042130_init_data"],[1,4087,64,0],[1,4088,64,0,"code"],[1,4093,64,0],[1,4164,64,0,"_worklet_15383647275891_init_data"],[1,4166,64,0],[1,4167,64,0,"code"],[1,4172,64,0],[1,4998,64,0,"_worklet_7919274967463_init_data"],[1,5000,64,0],[1,5001,64,0,"code"],[1,5006,64,0],[1,5241,64,0,"e"],[1,5243,64,0,"Bezier"],[1,5251,77,7],[1,5268,77,7,"Bezier"],[1,5270,77,7],[1,5279,77,23,"mX1"],[1,5281,77,28,"mY1"],[1,5283,77,33,"mX2"],[1,5285,77,38,"mY2"],[1,5288,77,43],[1,5294,77,43,"LinearEasing"],[1,5297,80,2],[1,5314,80,2,"LinearEasing"],[1,5316,80,2],[1,5325,80,24,"x"],[1,5328,83,4],[1,5335,83,11,"x"],[1,5336,84,2],[1,5338,84,3],[1,5345,84,3,"LinearEasing"],[1,5347,84,3,"__closure"],[1,5357,84,3],[1,5360,84,3,"LinearEasing"],[1,5362,84,3,"__workletHash"],[1,5376,84,3],[1,5390,84,3,"LinearEasing"],[1,5392,84,3,"__initData"],[1,5403,84,3,"_worklet_17244837042130_init_data"],[1,5405,84,3,"LinearEasing"],[1,5406,84,3],[1,5408,80,2],[1,5411,85,2],[1,5416,85,8,"mX1"],[1,5419,85,15],[1,5422,85,20,"mX1"],[1,5425,85,27],[1,5428,85,32,"mX2"],[1,5431,85,39],[1,5434,85,44,"mX2"],[1,5437,85,51],[1,5440,86,4],[1,5446,86,10],[1,5450,86,14,"ReanimatedError"],[1,5468,86,30],[1,5512,88,2],[1,5515,88,6,"mX1"],[1,5519,88,14,"mY1"],[1,5522,88,21,"mX2"],[1,5526,88,29,"mY2"],[1,5528,89,4],[1,5535,89,11,"LinearEasing"],[1,5537,91,2],[1,5543,91,8,"sampleValues"],[1,5545,91,23],[1,5549,91,27,"Array"],[1,5555,16,25],[1,5559,94,2],[1,5563,94,7],[1,5567,94,11,"i"],[1,5569,94,15],[1,5571,94,18,"i"],[1,5573,16,25],[1,5578,94,42,"i"],[1,5580,95,4,"sampleValues"],[1,5582,95,17,"i"],[1,5585,95,22,"calcBezier"],[1,5587,95,33,"i"],[1,5589,95,37,"kSampleStepSize"],[1,5591,95,54,"mX1"],[1,5593,95,59,"mX2"],[1,5596,96,3],[1,5602,96,3,"getTForX"],[1,5605,97,2],[1,5622,97,2,"getTForX"],[1,5624,97,2],[1,5633,97,20,"aX"],[1,5636,100,4],[1,5640,100,8,"intervalStart"],[1,5642,100,24],[1,5644,101,8,"currentSample"],[1,5646,101,24],[1,5648,103,4],[1,5653,102,20],[1,5658,103,11,"currentSample"],[1,5661,103,43,"sampleValues"],[1,5663,103,56,"currentSample"],[1,5667,103,74,"aX"],[1,5671,103,80,"currentSample"],[1,5673,104,6,"intervalStart"],[1,5676,104,23,"kSampleStepSize"],[1,5680,106,6,"currentSample"],[1,5682,109,4],[1,5688,110,10,"guessForT"],[1,5690,110,22,"intervalStart"],[1,5693,109,18,"aX"],[1,5695,109,23,"sampleValues"],[1,5697,109,36,"currentSample"],[1,5702,109,55,"sampleValues"],[1,5704,109,68,"currentSample"],[1,5706,109,84],[1,5709,109,89,"sampleValues"],[1,5711,109,102,"currentSample"],[1,5715,110,45,"kSampleStepSize"],[1,5717,111,10,"initialSlope"],[1,5719,111,25,"getSlope"],[1,5721,111,34,"guessForT"],[1,5723,111,45,"mX1"],[1,5725,111,50,"mX2"],[1,5728,112,4],[1,5735,112,8,"initialSlope"],[1,5738,112,24,"NEWTON_MIN_SLOPE"],[1,5740,113,13,"newtonRaphsonIterate"],[1,5742,113,34,"aX"],[1,5744,113,38,"guessForT"],[1,5746,113,49,"mX1"],[1,5748,113,54,"mX2"],[1,5751,114,32],[1,5755,114,15,"initialSlope"],[1,5757,115,13,"guessForT"],[1,5759,117,13,"binarySubdivide"],[1,5761,117,29,"aX"],[1,5763,117,33,"intervalStart"],[1,5765,117,48,"intervalStart"],[1,5767,117,64,"kSampleStepSize"],[1,5769,117,81,"mX1"],[1,5771,117,86,"mX2"],[1,5773,119,2],[1,5775,119,3],[1,5782,119,3,"getTForX"],[1,5784,119,3,"__closure"],[1,5794,119,3],[1,5795,119,3,"kSplineTableSize"],[1,5812,16,25],[1,5815,119,3,"sampleValues"],[1,5830,119,3,"kSampleStepSize"],[1,5848,119,3,"getSlope"],[1,5859,119,3,"mX1"],[1,5865,119,3,"mX2"],[1,5871,119,3,"NEWTON_MIN_SLOPE"],[1,5890,119,3,"newtonRaphsonIterate"],[1,5913,119,3,"binarySubdivide"],[1,5932,119,3,"getTForX"],[1,5934,119,3,"__workletHash"],[1,5948,119,3],[1,5962,119,3,"getTForX"],[1,5964,119,3,"__initData"],[1,5975,119,3,"_worklet_15383647275891_init_data"],[1,5977,119,3,"getTForX"],[1,5978,119,3],[1,5980,97,2],[1,5983,120,2],[1,5990,120,9],[1,6007,120,9,"BezierEasing"],[1,6009,120,9],[1,6018,120,31,"x"],[1,6021,123,4],[1,6028,123,8,"mX1"],[1,6032,123,16,"mY1"],[1,6035,123,23,"mX2"],[1,6039,123,31,"mY2"],[1,6041,124,13,"x"],[1,6043,127,14],[1,6047,127,8,"x"],[1,6049,128,13],[1,6051,130,14],[1,6055,130,8,"x"],[1,6057,131,13],[1,6059,133,11,"calcBezier"],[1,6061,133,22,"getTForX"],[1,6063,133,31,"x"],[1,6066,133,35,"mY1"],[1,6068,133,40,"mY2"],[1,6070,134,2],[1,6072,134,3],[1,6079,134,3,"BezierEasing"],[1,6081,134,3,"__closure"],[1,6091,134,3],[1,6092,134,3,"mX1"],[1,6098,134,3,"mY1"],[1,6104,134,3,"mX2"],[1,6110,134,3,"mY2"],[1,6116,134,3,"calcBezier"],[1,6129,134,3,"getTForX"],[1,6141,134,3,"BezierEasing"],[1,6143,134,3,"__workletHash"],[1,6157,134,3],[1,6171,134,3,"BezierEasing"],[1,6173,134,3,"__initData"],[1,6184,134,3,"_worklet_7919274967463_init_data"],[1,6186,134,3,"BezierEasing"],[1,6187,134,3],[1,6189,120,9],[1,6191,135,0],[1,6193,135,1],[1,6200,135,1,"Bezier"],[1,6202,135,1,"__closure"],[1,6212,135,1],[1,6213,135,1,"kSplineTableSize"],[1,6230,16,25],[1,6233,135,1,"calcBezier"],[1,6246,135,1,"kSampleStepSize"],[1,6264,135,1,"getSlope"],[1,6275,135,1,"NEWTON_MIN_SLOPE"],[1,6294,135,1,"newtonRaphsonIterate"],[1,6317,135,1,"binarySubdivide"],[1,6336,135,1,"Bezier"],[1,6338,135,1,"__workletHash"],[1,6352,135,1],[1,6366,135,1,"Bezier"],[1,6368,135,1,"__initData"],[1,6379,135,1,"_worklet_6918608934740_init_data"],[1,6381,135,1,"Bezier"],[1,6382,135,1],[1,6384,77,7],[1,6389]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","Bezier","LinearEasing","getTForX","BezierEasing"],"mappings":"AAA;ACiB;CDI;AEC;CFI;AGC;CHI;AIG;CJI;AKG;CLI;AMC;CNgB;AOC;CPY;OQC;ECG;GDI;EEa;GFsB;SGC;GHc;CRC"}},"type":"js/module"}]}