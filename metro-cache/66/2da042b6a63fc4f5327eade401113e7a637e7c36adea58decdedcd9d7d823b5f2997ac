{"dependencies":[{"name":"../Colors.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":61,"index":76}}],"key":"vciIvByGV/VYcdc+1h/QRyZuAVI=","exportNames":["*"]}},{"name":"../logger/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":77},"end":{"line":4,"column":44,"index":121}}],"key":"pBiviTeVoxyQBwxnAV5OZFjetV0=","exportNames":["*"]}},{"name":"./timing.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":122},"end":{"line":5,"column":41,"index":163}}],"key":"LBjw1Gump64952fkFs/FlZzr22c=","exportNames":["*"]}},{"name":"./util.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":164},"end":{"line":6,"column":72,"index":236}}],"key":"+UpHPazG/Yk8JnTjB6d2Eo+vUl4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,e,d){'use strict';Object.defineProperty(e,\"__esModule\",{value:!0}),e.withStyleAnimation=void 0;var t=r(d[0]),n=r(d[1]),i=r(d[2]),o=r(d[3]);const c={code:\"function resolvePath_reactNativeReanimated_styleAnimationJs1(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(acc!==null&&typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\"},l=(function(){const t=function(t,n){return(Array.isArray(n)?n:[n]).reduce((t,n)=>Array.isArray(t)&&'number'==typeof n||null!==t&&'object'==typeof t&&n in t?t[n]:void 0,t)};return t.__closure={},t.__workletHash=0xa0236b1b95a,t.__initData=c,t})(),u={code:\"function setPath_reactNativeReanimated_styleAnimationJs2(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!(keys[i]in currObj)){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\"},s=(function(){const t=function(t,n,i){const o=Array.isArray(n)?n:[n];let c=t;for(let t=0;t<o.length-1;t++)o[t]in c||('number'==typeof o[t+1]?c[o[t]]=[]:c[o[t]]={}),c=c[o[t]];c[o[o.length-1]]=i};return t.__closure={},t.__workletHash=0xdfe7532ae49,t.__initData=u,t})(),y={code:\"function withStyleAnimation_reactNativeReanimated_styleAnimationJs3(styleAnimations){const{defineAnimation,ColorProperties,setPath,processColor,resolvePath,__DEV__,logger,isValidLayoutAnimationProp,withTiming}=this.__closure;return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}const isAnimatingColorProp=ColorProperties.includes(currentEntry.path[0]);setPath(animation.current,currentEntry.path,isAnimatingColorProp?processColor(currentStyleAnimation.current):currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(__DEV__){if(prevVal===undefined){logger.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}const propName=currentEntry.path[0];if(typeof propName==='string'&&!isValidLayoutAnimationProp(propName.trim())){logger.warn(\\\"'\\\"+propName+\\\"' property is not officially supported for layout animations. It may not work as expected.\\\");}}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}\"},p={code:\"function reactNativeReanimated_styleAnimationJs4(){const{ColorProperties,setPath,processColor,styleAnimations,resolvePath,__DEV__,logger,isValidLayoutAnimationProp,withTiming}=this.__closure;const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}const isAnimatingColorProp=ColorProperties.includes(currentEntry.path[0]);setPath(animation.current,currentEntry.path,isAnimatingColorProp?processColor(currentStyleAnimation.current):currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(__DEV__){if(prevVal===undefined){logger.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}const propName=currentEntry.path[0];if(typeof propName==='string'&&!isValidLayoutAnimationProp(propName.trim())){logger.warn(\\\"'\\\"+propName+\\\"' property is not officially supported for layout animations. It may not work as expected.\\\");}}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}\"};e.withStyleAnimation=(function(){const c=function(c){return(0,o.defineAnimation)({},(function(){const u=function(){return{isHigherOrder:!0,onFrame:(n,i)=>{let o=!1;const c=[{value:n.styleAnimations,path:[]}];for(;c.length>0;){const l=c.pop();if(Array.isArray(l.value))for(let t=0;t<l.value.length;t++)c.push({value:l.value[t],path:l.path.concat(t)});else if('object'==typeof l.value&&void 0===l.value.onFrame)for(const t of Object.keys(l.value))c.push({value:l.value[t],path:l.path.concat(t)});else{const c=l.value;if(c.finished)continue;c.onFrame(c,i)?(c.finished=!0,c.callback&&c.callback(!0)):o=!0;const u=t.ColorProperties.includes(l.path[0]);s(n.current,l.path,u?(0,t.processColor)(c.current):c.current)}}return!o},onStart:(t,n,o,u)=>{const y=[{value:c,path:[]}];for(;y.length>0;){const c=y.pop();if(Array.isArray(c.value))for(let t=0;t<c.value.length;t++)y.push({value:c.value[t],path:c.path.concat(t)});else if('object'==typeof c.value&&void 0===c.value.onStart)for(const t of Object.keys(c.value))y.push({value:c.value[t],path:c.path.concat(t)});else{const y=l(u?.styleAnimations,c.path);let p,h=l(n,c.path);y&&!h&&(h=y.current),s(t.current,c.path,h),'object'==typeof c.value&&c.value.onStart?p=c.value:(p=(0,i.withTiming)(c.value,{duration:0}),s(t.styleAnimations,c.path,p)),p.onStart(p,h,o,y)}}},current:{},styleAnimations:c,callback:t=>{if(!t){const t=[c];for(;t.length>0;){const n=t.pop();if(Array.isArray(n))for(const i of n)t.push(i);else if('object'==typeof n&&void 0===n.onStart)for(const i of Object.values(n))t.push(i);else{const t=n;!t.finished&&t.callback&&t.callback(!1)}}}}}};return u.__closure={ColorProperties:t.ColorProperties,setPath:s,processColor:t.processColor,styleAnimations:c,resolvePath:l,__DEV__:!1,logger:n.logger,isValidLayoutAnimationProp:o.isValidLayoutAnimationProp,withTiming:i.withTiming},u.__workletHash=2043192133177,u.__initData=p,u})())};return c.__closure={defineAnimation:o.defineAnimation,ColorProperties:t.ColorProperties,setPath:s,processColor:t.processColor,resolvePath:l,__DEV__:!1,logger:n.logger,isValidLayoutAnimationProp:o.isValidLayoutAnimationProp,withTiming:i.withTiming},c.__workletHash=0xdb35f00a4da,c.__initData=y,c})()});","lineCount":1,"map":[[1,29,1,0],[1,42,1,13,"Object"],[1,49,1,13,"defineProperty"],[1,64,1,13,"e"],[1,66,1,13],[1,80,1,13,"value"],[1,87,1,13],[1,91,1,13,"e"],[1,93,1,13,"withStyleAnimation"],[1,117,1,13,"undefined"],[1,119,3,0],[1,123,3,0,"_Colors"],[1,125,3,0,"r"],[1,127,3,0,"d"],[1,129,3,0],[1,133,4,0,"_index"],[1,135,4,0,"r"],[1,137,4,0,"d"],[1,139,4,0],[1,143,5,0,"_timing"],[1,145,5,0,"r"],[1,147,5,0,"d"],[1,149,5,0],[1,153,6,0,"_util"],[1,155,6,0,"r"],[1,157,6,0,"d"],[1,159,6,0],[1,163,9,0],[1,169,9,0,"_worklet_11004623829338_init_data"],[1,171,9,0],[1,172,9,0,"code"],[1,177,9,0],[1,512,9,0,"resolvePath"],[1,515,10,0],[1,532,10,0,"resolvePath"],[1,534,10,0],[1,543,10,21,"obj"],[1,545,10,26,"path"],[1,548,14,2],[1,555,13,15,"Array"],[1,561,13,21,"isArray"],[1,569,13,29,"path"],[1,572,13,37,"path"],[1,574,13,44],[1,575,13,45,"path"],[1,579,14,14,"reduce"],[1,586,14,21],[1,587,14,22,"acc"],[1,589,14,27,"current"],[1,593,15,8,"Array"],[1,599,15,14,"isArray"],[1,607,15,22,"acc"],[1,611,15,49],[1,628,15,37,"current"],[1,631,17,23],[1,638,17,15,"acc"],[1,641,17,46],[1,658,17,38,"acc"],[1,661,17,58,"current"],[1,666,17,69,"acc"],[1,668,16,13,"acc"],[1,670,16,17,"current"],[1,678,17,11],[1,680,21,5,"obj"],[1,682,22,0],[1,684,22,1],[1,691,22,1,"resolvePath"],[1,693,22,1,"__closure"],[1,703,22,1],[1,706,22,1,"resolvePath"],[1,708,22,1,"__workletHash"],[1,722,22,1],[1,736,22,1,"resolvePath"],[1,738,22,1,"__initData"],[1,749,22,1,"_worklet_11004623829338_init_data"],[1,751,22,1,"resolvePath"],[1,752,22,1],[1,754,10,0],[1,757,24,0,"_worklet_15386539109961_init_data"],[1,759,24,0],[1,760,24,0,"code"],[1,765,24,0],[1,1117,24,0,"setPath"],[1,1120,26,0],[1,1137,26,0,"setPath"],[1,1139,26,0],[1,1148,26,17,"obj"],[1,1150,26,22,"path"],[1,1152,26,28,"value"],[1,1155,29,2],[1,1161,29,8,"keys"],[1,1163,29,15,"Array"],[1,1169,29,21,"isArray"],[1,1177,29,29,"path"],[1,1180,29,37,"path"],[1,1182,29,44],[1,1183,29,45,"path"],[1,1186,30,2],[1,1190,30,6,"currObj"],[1,1192,30,16,"obj"],[1,1194,31,2],[1,1198,31,7],[1,1202,31,11,"i"],[1,1204,31,15],[1,1206,31,18,"i"],[1,1208,31,22,"keys"],[1,1210,31,27,"length"],[1,1217,31,36],[1,1219,31,39,"i"],[1,1223,34,10,"keys"],[1,1225,34,15,"i"],[1,1230,34,21,"currObj"],[1,1234,36,33],[1,1251,36,17,"keys"],[1,1253,36,22,"i"],[1,1255,36,26],[1,1258,37,8,"currObj"],[1,1260,37,16,"keys"],[1,1262,37,21,"i"],[1,1266,37,27],[1,1269,39,8,"currObj"],[1,1271,39,16,"keys"],[1,1273,39,21,"i"],[1,1277,39,27],[1,1278,39,28],[1,1281,42,4,"currObj"],[1,1283,42,14,"currObj"],[1,1285,42,22,"keys"],[1,1287,42,27,"i"],[1,1291,44,2,"currObj"],[1,1293,44,10,"keys"],[1,1295,44,15,"keys"],[1,1297,44,20,"length"],[1,1304,44,29],[1,1308,44,35,"value"],[1,1309,45,0],[1,1311,45,1],[1,1318,45,1,"setPath"],[1,1320,45,1,"__closure"],[1,1330,45,1],[1,1333,45,1,"setPath"],[1,1335,45,1,"__workletHash"],[1,1349,45,1],[1,1363,45,1,"setPath"],[1,1365,45,1,"__initData"],[1,1376,45,1,"_worklet_15386539109961_init_data"],[1,1378,45,1,"setPath"],[1,1379,45,1],[1,1381,26,0],[1,1384,26,0,"_worklet_15064044184794_init_data"],[1,1386,26,0],[1,1387,26,0,"code"],[1,1392,26,0],[1,5187,26,0,"_worklet_2043192133177_init_data"],[1,5189,26,0],[1,5190,26,0,"code"],[1,5195,26,0],[1,8906,26,0,"e"],[1,8908,26,0,"withStyleAnimation"],[1,8928,46,7],[1,8945,46,7,"withStyleAnimation"],[1,8947,46,7],[1,8956,46,35,"styleAnimations"],[1,8959,49,2],[1,8966,49,9],[1,8968,49,9,"defineAnimation"],[1,8987,49,25],[1,8988,49,26],[1,8991,49,29],[1,9008,49,29,"reactNativeReanimated_styleAnimationJs4"],[1,9010,49,29],[1,9021,170,4],[1,9027,170,11],[1,9028,171,6,"isHigherOrder"],[1,9043,171,21],[1,9045,172,6,"onFrame"],[1,9053,52,20,"onFrame"],[1,9054,52,21,"animation"],[1,9056,52,32,"now"],[1,9061,53,6],[1,9065,53,10,"stillGoing"],[1,9068,53,23],[1,9070,54,6],[1,9076,54,12,"entriesToCheck"],[1,9078,54,29],[1,9079,54,30],[1,9080,55,8,"value"],[1,9086,55,15,"animation"],[1,9088,55,25,"styleAnimations"],[1,9104,56,8,"path"],[1,9109,56,14],[1,9114,58,6],[1,9119,58,13,"entriesToCheck"],[1,9121,58,28,"length"],[1,9128,58,37],[1,9131,58,40],[1,9132,59,8],[1,9138,59,14,"currentEntry"],[1,9140,59,29,"entriesToCheck"],[1,9142,59,44,"pop"],[1,9148,60,8],[1,9151,60,12,"Array"],[1,9157,60,18,"isArray"],[1,9165,60,26,"currentEntry"],[1,9167,60,39,"value"],[1,9174,61,10],[1,9178,61,15],[1,9182,61,19,"index"],[1,9184,61,27],[1,9186,61,30,"index"],[1,9188,61,38,"currentEntry"],[1,9190,61,51,"value"],[1,9196,61,57,"length"],[1,9203,61,65,"index"],[1,9207,62,12,"entriesToCheck"],[1,9209,62,27,"push"],[1,9214,62,32],[1,9215,63,14,"value"],[1,9221,63,21,"currentEntry"],[1,9223,63,34,"value"],[1,9229,63,40,"index"],[1,9232,64,14,"path"],[1,9237,64,20,"currentEntry"],[1,9239,64,33,"path"],[1,9244,64,38,"concat"],[1,9251,64,45,"index"],[1,9261,67,15],[1,9264,67,49],[1,9281,67,26,"currentEntry"],[1,9283,67,39,"value"],[1,9295,67,92,"undefined"],[1,9299,67,61,"currentEntry"],[1,9301,67,74,"value"],[1,9307,67,80,"onFrame"],[1,9315,69,10],[1,9319,69,15],[1,9325,69,21,"key"],[1,9330,69,28,"Object"],[1,9337,69,35,"keys"],[1,9342,69,40,"currentEntry"],[1,9344,69,53,"value"],[1,9351,70,12,"entriesToCheck"],[1,9353,70,27,"push"],[1,9358,70,32],[1,9359,71,14,"value"],[1,9365,71,21,"currentEntry"],[1,9367,71,34,"value"],[1,9373,71,40,"key"],[1,9376,72,14,"path"],[1,9381,72,20,"currentEntry"],[1,9383,72,33,"path"],[1,9388,72,38,"concat"],[1,9395,72,45,"key"],[1,9404,75,15],[1,9405,76,10],[1,9411,76,16,"currentStyleAnimation"],[1,9413,76,40,"currentEntry"],[1,9415,76,53,"value"],[1,9421,77,10],[1,9424,77,14,"currentStyleAnimation"],[1,9426,77,36,"finished"],[1,9435,78,12],[1,9444,80,27,"currentStyleAnimation"],[1,9446,80,49,"onFrame"],[1,9454,80,57,"currentStyleAnimation"],[1,9456,80,80,"now"],[1,9460,82,12,"currentStyleAnimation"],[1,9462,82,34,"finished"],[1,9472,82,45],[1,9474,83,16,"currentStyleAnimation"],[1,9476,83,38,"callback"],[1,9486,84,14,"currentStyleAnimation"],[1,9488,84,36,"callback"],[1,9498,84,45],[1,9502,87,12,"stillGoing"],[1,9505,87,25],[1,9507,92,10],[1,9513,92,16,"isAnimatingColorProp"],[1,9515,92,39,"ColorProperties"],[1,9533,92,55,"includes"],[1,9542,92,64,"currentEntry"],[1,9544,92,77,"path"],[1,9549,92,82],[1,9553,93,10,"setPath"],[1,9555,93,18,"animation"],[1,9557,93,28,"current"],[1,9565,93,37,"currentEntry"],[1,9567,93,50,"path"],[1,9572,93,56,"isAnimatingColorProp"],[1,9575,93,79],[1,9577,93,79,"processColor"],[1,9593,93,92,"currentStyleAnimation"],[1,9595,93,114,"current"],[1,9604,93,125,"currentStyleAnimation"],[1,9606,93,147,"current"],[1,9614,94,8],[1,9615,95,6],[1,9616,96,6],[1,9623,96,14,"stillGoing"],[1,9626,173,6,"onStart"],[1,9634,98,20,"onStart"],[1,9635,98,21,"animation"],[1,9637,98,32,"value"],[1,9639,98,39,"now"],[1,9641,98,44,"previousAnimation"],[1,9646,99,6],[1,9652,99,12,"entriesToCheck"],[1,9654,99,29],[1,9655,99,30],[1,9656,100,8,"value"],[1,9662,100,15,"styleAnimations"],[1,9664,101,8,"path"],[1,9669,101,14],[1,9674,103,6],[1,9679,103,13,"entriesToCheck"],[1,9681,103,28,"length"],[1,9688,103,37],[1,9691,103,40],[1,9692,104,8],[1,9698,104,14,"currentEntry"],[1,9700,104,29,"entriesToCheck"],[1,9702,104,44,"pop"],[1,9708,105,8],[1,9711,105,12,"Array"],[1,9717,105,18,"isArray"],[1,9725,105,26,"currentEntry"],[1,9727,105,39,"value"],[1,9734,106,10],[1,9738,106,15],[1,9742,106,19,"index"],[1,9744,106,27],[1,9746,106,30,"index"],[1,9748,106,38,"currentEntry"],[1,9750,106,51,"value"],[1,9756,106,57,"length"],[1,9763,106,65,"index"],[1,9767,107,12,"entriesToCheck"],[1,9769,107,27,"push"],[1,9774,107,32],[1,9775,108,14,"value"],[1,9781,108,21,"currentEntry"],[1,9783,108,34,"value"],[1,9789,108,40,"index"],[1,9792,109,14,"path"],[1,9797,109,20,"currentEntry"],[1,9799,109,33,"path"],[1,9804,109,38,"concat"],[1,9811,109,45,"index"],[1,9821,112,15],[1,9824,112,49],[1,9841,112,26,"currentEntry"],[1,9843,112,39,"value"],[1,9855,112,92,"undefined"],[1,9859,112,61,"currentEntry"],[1,9861,112,74,"value"],[1,9867,112,80,"onStart"],[1,9875,113,10],[1,9879,113,15],[1,9885,113,21,"key"],[1,9890,113,28,"Object"],[1,9897,113,35,"keys"],[1,9902,113,40,"currentEntry"],[1,9904,113,53,"value"],[1,9911,114,12,"entriesToCheck"],[1,9913,114,27,"push"],[1,9918,114,32],[1,9919,115,14,"value"],[1,9925,115,21,"currentEntry"],[1,9927,115,34,"value"],[1,9933,115,40,"key"],[1,9936,116,14,"path"],[1,9941,116,20,"currentEntry"],[1,9943,116,33,"path"],[1,9948,116,38,"concat"],[1,9955,116,45,"key"],[1,9964,119,15],[1,9965,120,10],[1,9971,120,16,"prevAnimation"],[1,9973,120,32,"resolvePath"],[1,9975,120,44,"previousAnimation"],[1,9978,120,63,"styleAnimations"],[1,9994,120,80,"currentEntry"],[1,9996,120,93,"path"],[1,10002,121,10],[1,10006,135,14,"currentAnimation"],[1,10008,121,14,"prevVal"],[1,10010,121,24,"resolvePath"],[1,10012,121,36,"value"],[1,10014,121,43,"currentEntry"],[1,10016,121,56,"path"],[1,10022,122,14,"prevAnimation"],[1,10026,122,32,"prevVal"],[1,10030,123,12,"prevVal"],[1,10032,123,22,"prevAnimation"],[1,10034,123,36,"current"],[1,10043,134,10,"setPath"],[1,10045,134,18,"animation"],[1,10047,134,28,"current"],[1,10055,134,37,"currentEntry"],[1,10057,134,50,"path"],[1,10062,134,56,"prevVal"],[1,10065,136,44],[1,10082,136,21,"currentEntry"],[1,10084,136,34,"value"],[1,10091,136,57,"currentEntry"],[1,10093,136,70,"value"],[1,10099,136,76,"onStart"],[1,10107,142,12,"currentAnimation"],[1,10109,142,31,"currentEntry"],[1,10111,142,44,"value"],[1,10118,137,12,"currentAnimation"],[1,10121,137,31],[1,10123,137,31,"withTiming"],[1,10137,137,42,"currentEntry"],[1,10139,137,55,"value"],[1,10145,137,62],[1,10146,138,14,"duration"],[1,10155,138,24],[1,10159,140,12,"setPath"],[1,10161,140,20,"animation"],[1,10163,140,30,"styleAnimations"],[1,10179,140,47,"currentEntry"],[1,10181,140,60,"path"],[1,10186,140,66,"currentAnimation"],[1,10190,144,10,"currentAnimation"],[1,10192,144,27,"onStart"],[1,10200,144,35,"currentAnimation"],[1,10202,144,53,"prevVal"],[1,10204,144,62,"now"],[1,10206,144,67,"prevAnimation"],[1,10208,145,8],[1,10209,146,6],[1,10212,174,6,"current"],[1,10220,174,15],[1,10221,174,16],[1,10223,175,6,"styleAnimations"],[1,10241,176,6,"callback"],[1,10250,148,21,"finished"],[1,10254,149,6],[1,10258,149,11,"finished"],[1,10260,149,21],[1,10261,150,8],[1,10267,150,14,"animationsToCheck"],[1,10269,150,34],[1,10270,150,35,"styleAnimations"],[1,10273,151,8],[1,10278,151,15,"animationsToCheck"],[1,10280,151,33,"length"],[1,10287,151,42],[1,10290,151,45],[1,10291,152,10],[1,10297,152,16,"currentAnimation"],[1,10299,152,35,"animationsToCheck"],[1,10301,152,53,"pop"],[1,10307,153,10],[1,10310,153,14,"Array"],[1,10316,153,20,"isArray"],[1,10324,153,28,"currentAnimation"],[1,10327,154,12],[1,10331,154,17],[1,10337,154,23,"element"],[1,10342,154,34,"currentAnimation"],[1,10344,155,14,"animationsToCheck"],[1,10346,155,32,"push"],[1,10351,155,37,"element"],[1,10359,157,17],[1,10362,157,49],[1,10379,157,28,"currentAnimation"],[1,10387,157,90,"undefined"],[1,10391,157,61,"currentAnimation"],[1,10393,157,78,"onStart"],[1,10401,158,12],[1,10405,158,17],[1,10411,158,23,"value"],[1,10416,158,32,"Object"],[1,10423,158,39,"values"],[1,10430,158,46,"currentAnimation"],[1,10433,159,14,"animationsToCheck"],[1,10435,159,32,"push"],[1,10440,159,37,"value"],[1,10447,161,17],[1,10448,162,12],[1,10454,162,18,"currentStyleAnimation"],[1,10456,162,42,"currentAnimation"],[1,10459,163,17,"currentStyleAnimation"],[1,10461,163,39,"finished"],[1,10471,163,51,"currentStyleAnimation"],[1,10473,163,73,"callback"],[1,10483,164,14,"currentStyleAnimation"],[1,10485,164,36,"callback"],[1,10495,164,45],[1,10497,166,10],[1,10498,167,8],[1,10499,168,6],[1,10502,178,2],[1,10504,137,41],[1,10511,178,3,"reactNativeReanimated_styleAnimationJs4"],[1,10513,178,3,"__closure"],[1,10523,178,3],[1,10524,178,3,"ColorProperties"],[1,10540,92,39,"ColorProperties"],[1,10558,92,54,"setPath"],[1,10568,92,54,"processColor"],[1,10581,93,79,"processColor"],[1,10596,93,91,"styleAnimations"],[1,10614,93,91,"resolvePath"],[1,10628,93,91,"__DEV__"],[1,10637,93,91],[1,10639,93,91,"logger"],[1,10646,127,14,"logger"],[1,10655,127,20,"isValidLayoutAnimationProp"],[1,10682,130,49,"isValidLayoutAnimationProp"],[1,10711,130,75,"withTiming"],[1,10722,137,31,"withTiming"],[1,10736,137,41,"reactNativeReanimated_styleAnimationJs4"],[1,10738,137,41,"__workletHash"],[1,10752,137,41],[1,10766,137,41,"reactNativeReanimated_styleAnimationJs4"],[1,10768,137,41,"__initData"],[1,10779,137,41,"_worklet_2043192133177_init_data"],[1,10781,137,41,"reactNativeReanimated_styleAnimationJs4"],[1,10782,137,41],[1,10784,49,29],[1,10787,179,0],[1,10789,137,41],[1,10796,179,1,"withStyleAnimation"],[1,10798,179,1,"__closure"],[1,10808,179,1],[1,10809,179,1,"defineAnimation"],[1,10825,49,9,"defineAnimation"],[1,10843,49,24,"ColorProperties"],[1,10859,92,39,"ColorProperties"],[1,10877,92,54,"setPath"],[1,10887,92,54,"processColor"],[1,10900,93,79,"processColor"],[1,10915,93,91,"resolvePath"],[1,10929,93,91,"__DEV__"],[1,10938,93,91],[1,10940,93,91,"logger"],[1,10947,127,14,"logger"],[1,10956,127,20,"isValidLayoutAnimationProp"],[1,10983,130,49,"isValidLayoutAnimationProp"],[1,11012,130,75,"withTiming"],[1,11023,137,31,"withTiming"],[1,11037,137,41,"withStyleAnimation"],[1,11039,137,41,"__workletHash"],[1,11053,137,41],[1,11067,137,41,"withStyleAnimation"],[1,11069,137,41,"__initData"],[1,11080,137,41,"_worklet_15064044184794_init_data"],[1,11082,137,41,"withStyleAnimation"],[1,11083,137,41],[1,11085,46,7],[1,11090]],"functionMap":{"names":["<global>","resolvePath","keys.reduce$argument_0","setPath","withStyleAnimation","defineAnimation$argument_1","onFrame","onStart","callback"],"mappings":"AAA;ACS;qBCI;GDO;CDC;AGI;CHmB;OIC;6BCG;oBCG;KD6C;oBEC;KFiD;qBGC;KHqB;GDS;CJC"}},"type":"js/module"}]}